Mappings:
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-0ff21806645c5e492 
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-0d097db2fb6e0f05e 
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-0cb0e70f44e1a4bb5 
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-048a01c78f7bae4aa 
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-03ed5bd63ba378bd8 
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-085edf38cedbea498 
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-00aa4671cbf840d82 
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-0ce71448843cb18a1 
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-00a1270ce1e007c27 
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-0a1f49a762473adbd 
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-0b69ea66ff7391e80 
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-00c03f7f7f2ec15c3 
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-0245d318c6788de52 
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-04b762b4289fba92b 
      HVMG2: NOT_SUPPORTED
Resources:
  AppNode:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !FindInMap 
        - AWSRegionArch2AMI 
        - !Ref 'AWS::Region'
        - HVM64
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !GetAtt AppNodeSG.GroupId
      UserData:
        Fn::Base64:
          !Sub |
              #!/bin/bash -ex
              yum install -y docker;
              yum install -y git;
              curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose;
              chmod +x /usr/local/bin/docker-compose;
              systemctl enable docker.service;
              systemctl start docker.service;
              mkdir /workingdir; 
              cd /workingdir;
              git clone  https://github.com/toda90/onedot-tasks.git;
              cd /workingdir/onedot-tasks/;
              docker-compose up -d;
  AppNodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: for the app nodes that allow ssh, nginx 
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '7000'
        ToPort: '7000'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:  !Join ['', [!Ref "AWS::StackName", "-VPC" ]]
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.10.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
